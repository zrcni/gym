1584311172356::repl/quit
1584339862833:(ns gym)
1584339959819:(ns gym.core)
1584339969900:(calculate-weekdays)
1584339979006:(calculate-weeks)
1584340385643:(mod 7 1)
1584340392972:(rem 7\n     1)
1584340400882:(mod 7 7)
1584340406214:(rem 7 7)
1584340409421:(rem 7 8)
1584340415006:(mod 7 8)
1584340880223:(replicate 7)
1584340900803:(into [] (replicate 7) [])
1584340918203:(into [] (replicate 7 [])\n      \n      )
1584340924168:(into [] (replicate 7 []))
1584341635537::repl/quit
1584344128665:(js/alert "ASD")
1584358089648::repl/quit
1584378634306:cljs-time.core
1584378646601:(ns gym)
1584378653664:(ns gym.core)
1584378660714:cljs-time.core
1584378676743:(:require 'cljs-time.core)
1584378684391:(require 'cljs-time.core)
1584378688361:cljs-time.core
1584378692515:cljs-time.core.plsu
1584378694897:cljs-time.core.plus
1584378759845:(cljs-time.core.date-time 2020 3 16)
1584378819351:(cljs-time.core.plus (cljs-time.core.date-time 2020 3 16) 1\n                     )
1584380110144:(require 'goog.date)
1584380118354:goog.date.isLeapYear
1584380563748:(cljs-time.core.date-time 2020 3 16)
1584380577707:(.setDay (cljs-time.core.date-time 2020 3 16))
1584380639190:(.getHours (cljs-time.core.date-time 2020 3 16))
1584380701204:(def date (atom (cljs-time.core.date-time 2020 3 16)))
1584380702564:date
1584380774089:(.setHours date 1)
1584380782256:date
1584380790811:(.getHours date)
1584380796987:(.getHours @date)
1584380802782:(.setHours @date 1)
1584380805486:@date
1584380808321:(.getHours @date)
1584380820203:(.setHours @date 1)
1584380984714:(swap! date (cljs-time.core.now))
1584380999750:(swap! date \n       cljs-time.core.now)
1584381003392:@date
1584381062605:(cljs-time.core.plus @date (cljs-time.core.days 1))
1584381065294:@date
1584381626529:calculate-weeks
1584381631138:(calculate-weeks @date)
1584381654767:t/now
1584381663161:(calculate-weeks t/now)
1584381668835:(calculate-weeks (t/now))
1584381712530:(calculate-weeks t/now)
1584381716985:t/now
1584381722021:(t/now)
1584381731843:(calculate-weeks (t/now))
1584381934419:(map-indexes (fn [i] i) (vec (replicate 7 nil))\n             \n             )
1584381945670:(map-indexes (fn [i] i) (vec (replicate 7 nil)))
1584381958272:(map-indexed\n (fn [i] i) (vec (replicate 7 nil)))
1584382000519:(calculate-weeks (t/now))
1584382042660:(map-indexed (fn [i] i) (vec (replicate 7 nil)))
1584382067265:(vec (replicate 35 (map-indexed (fn [i] i) (vec (replicate 7 nil)))))
1584382093397:(vec (replicate (* 5 7) (map-indexed (fn [i] i) (vec (replicate 7 nil)))))
1584382109003:(vec (replicate (* 5 7) (map-indexed (fn [i] {:date i}) (vec (replicate 7 nil)))))
1584382182736:(calculate-weeks (t/now))
1584382247846:(vec (replicate (* 5 7)\n                    (map-indexed (fn [i] {:date (t/plus start-date (t/days i))}) (vec (replicate 7 nil)))))
1584382270819:(vec (replicate (* 5 7)\n                    (map-indexed (fn [i] {:date (t/plus (t/now) (t/days i))}) (vec (replicate 7 nil)))))
1584382319679:(calculate-weeks (t/now))
1584382324851:(get (calculate-weeks (t/now)) 1)
1584382333750:((get (calculate-weeks (t/now)) 1))
1584382380539:(calculate-weeks (t/now))
1584383048134:(reduce (fn [a b c] [1 2 3]))
1584383116578:(reduce (fn [a b c] (do (prn a b c) (a)) [123 321 234 532)
1584383119274:(reduce (fn [a b c] (do (prn a b c) (a)) [123 321 234 532))
1584383130339:(reduce (fn [a b c] (do (prn a b c) a)) [123 321 234 532)))
1584383134012:(reduce (fn [a b c] (do (prn a b c) a)) [123 321 234 532))))
1584383135696:(reduce (fn [a b c] (do (prn a b c) a)) [123 321 234 532))
1584383136759:(reduce (fn [a b c] (do (prn a b c) a)) [123 321 234 532)
1584383140643:(reduce (fn [a b c] (do (prn a b c) a)) [123 321 234 532\n                                         )
1584383167036:(reduce (fn [a b c] (prn a b c) a))
1584383184164:(reduce (fn [a b c] (prn a b c) a) [123 456 678])
1584383251236:(reduce (fn [a b c] (prn b) a) [123 456 678])
1584383258913:(reduce (fn [a b c] (prn a) a) [123 456 678])
1584383262817:(reduce (fn [a b c] (prn c) a) [123 456 678])
1584383277626:(reduce-kv (fn [a b c] (prn b) a) [123 456 678])
1584383404397:(reduce-kv (fn [a b c] (prn b) a) [][123 456 678])
1584384188384:(calculate-weeks (t/now))
1584384307416:(mod 7 16)
1584384315092:(mod 16 7)
1584384945045:(calculate-weeks (t/now))
1584427554295:(should-show-month 1 1 (t/now))
1584427562628:(should-show-month 0 0 (t/now))
1584427642943:(should-show-month 0 0 (t/now)\n                   )
1584427836080:(.getDay (t/now))
1584427861025:(.day (t/now))
1584427881393:(t/day (t/now))
1584468982554:(.getDay (t/now))
1584469086673:(- 0 0)
1584470146579:(t/year (t/now))
1584470453313:(dd-mm-yyyy (t/now))
1584470472448:(dd-mm-yyyy t/now)
1584470480047:(dd-mm-yyyy (t/now))
1584474677037:@app-state
1584474686071:(dd-mm-yyyy @app-state)
1584474693878:(dd-mm-yyyy (:start-date @app-state))
1584474942337:(t/now)
1584474949673:(t/day (t/now))
1584474968496:(t/days (t/now))
1584475340829:(.setDate (t/now) 1)
1584475373726:(def d (atom (t/now)))
1584475375263:d
1584475391022:(.setDate @d 0)
1584475394435:@d
1584475413678:(t/now)
1584475457350:(-> (t/now) (.setDay % 0))
1584475466673:(-> (t/now) (.setDay -> % 0))
1584475570784:(start-of-week (t/now))
1584475609371:(dd-mm-yyyy (start-of-week (t/now)))
1584475637663:(start-of-week (t/now))
1584475648588:(.toISOString (start-of-week (t/now)))
